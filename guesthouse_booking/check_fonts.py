#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤ –∏ –∏—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'guesthouse_booking.settings')
django.setup()

from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.pdfbase.cidfonts import UnicodeCIDFont
import platform

def check_fonts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è PDF...")
    print(f"–û–°: {platform.system()}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ Unicode —à—Ä–∏—Ñ—Ç—ã
    print("1. –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ Unicode —à—Ä–∏—Ñ—Ç—ã ReportLab:")
    unicode_fonts = ['STSong-Light', 'HeiseiMin-W3', 'HeiseiKakuGo-W5']
    
    for font_name in unicode_fonts:
        try:
            pdfmetrics.registerFont(UnicodeCIDFont(font_name))
            print(f"   ‚úÖ {font_name} - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå {font_name} - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {str(e)}")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã Windows
    if platform.system() == 'Windows':
        print("2. –°–∏—Å—Ç–µ–º–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã Windows:")
        font_paths = [
            r'C:\Windows\Fonts\arial.ttf',
            r'C:\Windows\Fonts\calibri.ttf',
            r'C:\Windows\Fonts\segoeui.ttf',
            r'C:\Windows\Fonts\tahoma.ttf',
        ]
        
        for font_path in font_paths:
            if os.path.exists(font_path):
                try:
                    font_name = os.path.splitext(os.path.basename(font_path))[0]
                    pdfmetrics.registerFont(TTFont(font_name, font_path))
                    print(f"   ‚úÖ {font_name} - –¥–æ—Å—Ç—É–ø–µ–Ω ({font_path})")
                except Exception as e:
                    print(f"   ‚ùå {font_name} - –æ—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}")
            else:
                print(f"   ‚ùå {font_path} - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —à—Ä–∏—Ñ—Ç—ã
    print("3. –î—Ä—É–≥–∏–µ —à—Ä–∏—Ñ—Ç—ã:")
    other_fonts = [
        ('DejaVuSans', 'DejaVuSans.ttf'),
        ('Arial', 'arial.ttf'),
    ]
    
    for font_name, font_file in other_fonts:
        try:
            pdfmetrics.registerFont(TTFont(font_name, font_file))
            print(f"   ‚úÖ {font_name} - –¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå {font_name} - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {str(e)}")
    
    print()
    print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã Unicode —à—Ä–∏—Ñ—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Ö –¥–ª—è –ª—É—á—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã")
    print("   - –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã Windows, –æ–Ω–∏ —Ç–∞–∫–∂–µ —Ö–æ—Ä–æ—à–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü—É")
    print("   - –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—é")

if __name__ == "__main__":
    check_fonts() 